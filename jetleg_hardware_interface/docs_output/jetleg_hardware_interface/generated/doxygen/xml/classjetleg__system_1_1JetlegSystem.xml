<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classjetleg__system_1_1JetlegSystem" kind="class" language="C++" prot="public">
    <compoundname>jetleg_system::JetlegSystem</compoundname>
    <basecompoundref prot="public" virt="non-virtual">hardware_interface::SystemInterface</basecompoundref>
    <includes refid="jetleg__system_8hpp" local="no">jetleg_system.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classjetleg__system_1_1JetlegSystem_1a75da7349d17370c6ad0542501e46ce2d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; double &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;double&gt; &gt; jetleg_system::JetlegSystem::mJointStates</definition>
        <argsstring></argsstring>
        <name>mJointStates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maintains record of current joint states </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/jetleg_system/jetleg_system.hpp" line="128" column="15" bodyfile="include/jetleg_system/jetleg_system.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classjetleg__system_1_1JetlegSystem_1afba24553244d675cd46cca8af1504a21" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; serial::LibSerialBridge &gt;</type>
        <definition>std::shared_ptr&lt;serial::LibSerialBridge&gt; jetleg_system::JetlegSystem::serialBridgePointer</definition>
        <argsstring></argsstring>
        <name>serialBridgePointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maintains a reference to the interface to the arduino </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/jetleg_system/jetleg_system.hpp" line="131" column="19" bodyfile="include/jetleg_system/jetleg_system.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classjetleg__system_1_1JetlegSystem_1a26bebeddb08e952f7ea4c75c9def04f6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; jetleg_system::JetlegSystem::mJointCommands</definition>
        <argsstring></argsstring>
        <name>mJointCommands</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maintains current commands sent to the system </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/jetleg_system/jetleg_system.hpp" line="134" column="15" bodyfile="include/jetleg_system/jetleg_system.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classjetleg__system_1_1JetlegSystem_1a792fc6b78431438a93e5df52b86d8779" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; jetleg_system::JetlegSystem::mLinearStates</definition>
        <argsstring></argsstring>
        <name>mLinearStates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Integrated position of IMU </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/jetleg_system/jetleg_system.hpp" line="137" column="15" bodyfile="include/jetleg_system/jetleg_system.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classjetleg__system_1_1JetlegSystem_1a2cedaa9168a7bad50438f52bfe53d56f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; jetleg_system::JetlegSystem::mLinearSubStates</definition>
        <argsstring></argsstring>
        <name>mLinearSubStates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Integrated velocity </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/jetleg_system/jetleg_system.hpp" line="140" column="15" bodyfile="include/jetleg_system/jetleg_system.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classjetleg__system_1_1JetlegSystem_1a2d41cd33ca08689ec749c3b99c10ed89" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; jetleg_system::JetlegSystem::mAngularStates</definition>
        <argsstring></argsstring>
        <name>mAngularStates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Integrated orientation of IMU </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/jetleg_system/jetleg_system.hpp" line="143" column="15" bodyfile="include/jetleg_system/jetleg_system.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classjetleg__system_1_1JetlegSystem_1a4e4b67404cea6c43157561e7824b2d6d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::map&lt; std::string, double &gt; &gt;</type>
        <definition>std::vector&lt;std::map&lt;std::string, double&gt; &gt; jetleg_system::JetlegSystem::mSensorData</definition>
        <argsstring></argsstring>
        <name>mSensorData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stores the most current data recorded from sensors </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/jetleg_system/jetleg_system.hpp" line="146" column="15" bodyfile="include/jetleg_system/jetleg_system.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classjetleg__system_1_1JetlegSystem_1ad88534e87e6de70dbeabd7f730247cc0" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t jetleg_system::JetlegSystem::LINEAR_COORDS</definition>
        <argsstring></argsstring>
        <name>LINEAR_COORDS</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of linear components of IMU </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/jetleg_system/jetleg_system.hpp" line="149" column="27" bodyfile="include/jetleg_system/jetleg_system.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classjetleg__system_1_1JetlegSystem_1ae26b60827c59824a24f4d0f0159f9aec" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t jetleg_system::JetlegSystem::ANGULAR_COORDS</definition>
        <argsstring></argsstring>
        <name>ANGULAR_COORDS</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>NUmber of angular components of IMU </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/jetleg_system/jetleg_system.hpp" line="152" column="27" bodyfile="include/jetleg_system/jetleg_system.hpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classjetleg__system_1_1JetlegSystem_1a380caf2fd2f65362614257160250e9c7" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t jetleg_system::JetlegSystem::BAUD_RATE</definition>
        <argsstring></argsstring>
        <name>BAUD_RATE</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Baud Rate for serial port/stream IO </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/jetleg_system/jetleg_system.hpp" line="155" column="27" bodyfile="include/jetleg_system/jetleg_system.hpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classjetleg__system_1_1JetlegSystem_1aa89602fb1038dbbcd624b98235a882bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CallbackReturn</type>
        <definition>CallbackReturn jetleg_system::JetlegSystem::on_init</definition>
        <argsstring>(const hardware_interface::HardwareInfo &amp;info) override</argsstring>
        <name>on_init</name>
        <param>
          <type>const hardware_interface::HardwareInfo &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Performs basic error-checking and allocates memory for joint state and commands. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>structured hardware description as given by URDF </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CallbackReturn with value CallbackReturn::OK if no error were encountered or CallbackReturn::ERROR otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/jetleg_system/jetleg_system.hpp" line="54" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classjetleg__system_1_1JetlegSystem_1a0e5d4c9dbd146f96ababbb67e4ad08bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; hardware_interface::StateInterface &gt;</type>
        <definition>std::vector&lt;hardware_interface::StateInterface&gt; jetleg_system::JetlegSystem::export_state_interfaces</definition>
        <argsstring>() override</argsstring>
        <name>export_state_interfaces</name>
        <briefdescription>
<para>Advertises available state interfaces to the rest of ros2_control. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::vector&lt;hardware_interface::StateInterface&gt; with entries associated with maintained joint states to share with the rest of ros2_control </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/jetleg_system/jetleg_system.hpp" line="62" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classjetleg__system_1_1JetlegSystem_1ab230b4a577e2b3bfb40ea5c501cdfb1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; hardware_interface::CommandInterface &gt;</type>
        <definition>std::vector&lt;hardware_interface::CommandInterface&gt; jetleg_system::JetlegSystem::export_command_interfaces</definition>
        <argsstring>() override</argsstring>
        <name>export_command_interfaces</name>
        <briefdescription>
<para>Advertises available command interfaces to the rest of ros2_control. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::vector&lt;hardware_interface::CommandInterface&gt; with entries associated with current commands to send to system </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/jetleg_system/jetleg_system.hpp" line="70" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classjetleg__system_1_1JetlegSystem_1a4625d35ae677cc38bf735fd885615bd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hardware_interface::return_type</type>
        <definition>hardware_interface::return_type jetleg_system::JetlegSystem::read</definition>
        <argsstring>(const rclcpp::Time &amp;time, const rclcpp::Duration &amp;period) override</argsstring>
        <name>read</name>
        <param>
          <type>const rclcpp::Time &amp;</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const rclcpp::Duration &amp;</type>
          <declname>period</declname>
        </param>
        <briefdescription>
<para>Updates the maintained joint states. </para>
        </briefdescription>
        <detaileddescription>
<para>The current record of joint states shall be updated based on the received signals from the system. These updated values will be used by the rest of ros2_control</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>current record of time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>period</parametername>
</parameternamelist>
<parameterdescription>
<para>Time elapsed since last control cycle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hardware_interface::return_type with value OK if successful or ERROR otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/jetleg_system/jetleg_system.hpp" line="84" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classjetleg__system_1_1JetlegSystem_1a806fe995c7fd3b5e3b9bdcb1c223bd6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hardware_interface::return_type</type>
        <definition>hardware_interface::return_type jetleg_system::JetlegSystem::write</definition>
        <argsstring>(const rclcpp::Time &amp;, const rclcpp::Duration &amp;) override</argsstring>
        <name>write</name>
        <param>
          <type>const rclcpp::Time &amp;</type>
        </param>
        <param>
          <type>const rclcpp::Duration &amp;</type>
        </param>
        <briefdescription>
<para>Updates the current command signals to send to the system. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>hardware_interface::return_type with value OK if successful or ERROR otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/jetleg_system/jetleg_system.hpp" line="94" column="35"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classjetleg__system_1_1JetlegSystem_1a0650b7ca5c272c4e46b0ad291bd2fa2a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jetleg_system::JetlegSystem::imuLogger</definition>
        <argsstring>()</argsstring>
        <name>imuLogger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/jetleg_system/jetleg_system.hpp" line="99" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classjetleg__system_1_1JetlegSystem_1a2655ed092ba728427bece1cd6ae35119" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jetleg_system::JetlegSystem::updatePose</definition>
        <argsstring>(double timePeriod)</argsstring>
        <name>updatePose</name>
        <param>
          <type>double</type>
          <declname>timePeriod</declname>
        </param>
        <briefdescription>
<para>Updates the most current estimate of the cartesion position and orientation of the IMU sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timePeriod</parametername>
</parameternamelist>
<parameterdescription>
<para>time since last update </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/jetleg_system/jetleg_system.hpp" line="107" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classjetleg__system_1_1JetlegSystem_1aaa22eb3615f4867a243613041caef58a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jetleg_system::JetlegSystem::updateSensorData</definition>
        <argsstring>()</argsstring>
        <name>updateSensorData</name>
        <briefdescription>
<para>Reads data from the IMU and assigns the recorded values as visible sensor data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/jetleg_system/jetleg_system.hpp" line="113" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classjetleg__system_1_1JetlegSystem_1aa913d2257e30e9fced917105b530b5c8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jetleg_system::JetlegSystem::updateField</definition>
        <argsstring>(std::vector&lt; std::string &gt; interfaceNames, std::vector&lt; double &gt; sensorValues)</argsstring>
        <name>updateField</name>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>interfaceNames</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>sensorValues</declname>
        </param>
        <briefdescription>
<para>Updates the current values of the IMU sensor data fields. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interfaceNames</parametername>
</parameternamelist>
<parameterdescription>
<para>names of interfaces to corresponding data field </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sensorValues</parametername>
</parameternamelist>
<parameterdescription>
<para>values with which to update </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/jetleg_system/jetleg_system.hpp" line="121" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides an interface for communicating with the Jetleg prosthetic leg system. </para>
    </briefdescription>
    <detaileddescription>
<para>This class describes an interface for regulating the communication between low-level controller implemented with ros2_control and the electronic components of the Jetleg prosthetic device for users with transfemoral amputation. The available state information shall be angular position and velocity of the knee (and ankle if available). The command given to the device will be assumed to be torque </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>hardware_interface::SystemInterface</label>
      </node>
      <node id="1">
        <label>jetleg_system::JetlegSystem</label>
        <link refid="classjetleg__system_1_1JetlegSystem"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>hardware_interface::SystemInterface</label>
      </node>
      <node id="1">
        <label>jetleg_system::JetlegSystem</label>
        <link refid="classjetleg__system_1_1JetlegSystem"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/jetleg_system/jetleg_system.hpp" line="44" column="1" bodyfile="include/jetleg_system/jetleg_system.hpp" bodystart="45" bodyend="158"/>
    <listofallmembers>
      <member refid="classjetleg__system_1_1JetlegSystem_1ae26b60827c59824a24f4d0f0159f9aec" prot="private" virt="non-virtual"><scope>jetleg_system::JetlegSystem</scope><name>ANGULAR_COORDS</name></member>
      <member refid="classjetleg__system_1_1JetlegSystem_1a380caf2fd2f65362614257160250e9c7" prot="private" virt="non-virtual"><scope>jetleg_system::JetlegSystem</scope><name>BAUD_RATE</name></member>
      <member refid="classjetleg__system_1_1JetlegSystem_1ab230b4a577e2b3bfb40ea5c501cdfb1c" prot="public" virt="non-virtual"><scope>jetleg_system::JetlegSystem</scope><name>export_command_interfaces</name></member>
      <member refid="classjetleg__system_1_1JetlegSystem_1a0e5d4c9dbd146f96ababbb67e4ad08bc" prot="public" virt="non-virtual"><scope>jetleg_system::JetlegSystem</scope><name>export_state_interfaces</name></member>
      <member refid="classjetleg__system_1_1JetlegSystem_1a0650b7ca5c272c4e46b0ad291bd2fa2a" prot="private" virt="non-virtual"><scope>jetleg_system::JetlegSystem</scope><name>imuLogger</name></member>
      <member refid="classjetleg__system_1_1JetlegSystem_1ad88534e87e6de70dbeabd7f730247cc0" prot="private" virt="non-virtual"><scope>jetleg_system::JetlegSystem</scope><name>LINEAR_COORDS</name></member>
      <member refid="classjetleg__system_1_1JetlegSystem_1a2d41cd33ca08689ec749c3b99c10ed89" prot="private" virt="non-virtual"><scope>jetleg_system::JetlegSystem</scope><name>mAngularStates</name></member>
      <member refid="classjetleg__system_1_1JetlegSystem_1a26bebeddb08e952f7ea4c75c9def04f6" prot="private" virt="non-virtual"><scope>jetleg_system::JetlegSystem</scope><name>mJointCommands</name></member>
      <member refid="classjetleg__system_1_1JetlegSystem_1a75da7349d17370c6ad0542501e46ce2d" prot="private" virt="non-virtual"><scope>jetleg_system::JetlegSystem</scope><name>mJointStates</name></member>
      <member refid="classjetleg__system_1_1JetlegSystem_1a792fc6b78431438a93e5df52b86d8779" prot="private" virt="non-virtual"><scope>jetleg_system::JetlegSystem</scope><name>mLinearStates</name></member>
      <member refid="classjetleg__system_1_1JetlegSystem_1a2cedaa9168a7bad50438f52bfe53d56f" prot="private" virt="non-virtual"><scope>jetleg_system::JetlegSystem</scope><name>mLinearSubStates</name></member>
      <member refid="classjetleg__system_1_1JetlegSystem_1a4e4b67404cea6c43157561e7824b2d6d" prot="private" virt="non-virtual"><scope>jetleg_system::JetlegSystem</scope><name>mSensorData</name></member>
      <member refid="classjetleg__system_1_1JetlegSystem_1aa89602fb1038dbbcd624b98235a882bc" prot="public" virt="non-virtual"><scope>jetleg_system::JetlegSystem</scope><name>on_init</name></member>
      <member refid="classjetleg__system_1_1JetlegSystem_1a4625d35ae677cc38bf735fd885615bd7" prot="public" virt="non-virtual"><scope>jetleg_system::JetlegSystem</scope><name>read</name></member>
      <member refid="classjetleg__system_1_1JetlegSystem_1afba24553244d675cd46cca8af1504a21" prot="private" virt="non-virtual"><scope>jetleg_system::JetlegSystem</scope><name>serialBridgePointer</name></member>
      <member refid="classjetleg__system_1_1JetlegSystem_1aa913d2257e30e9fced917105b530b5c8" prot="private" virt="non-virtual"><scope>jetleg_system::JetlegSystem</scope><name>updateField</name></member>
      <member refid="classjetleg__system_1_1JetlegSystem_1a2655ed092ba728427bece1cd6ae35119" prot="private" virt="non-virtual"><scope>jetleg_system::JetlegSystem</scope><name>updatePose</name></member>
      <member refid="classjetleg__system_1_1JetlegSystem_1aaa22eb3615f4867a243613041caef58a" prot="private" virt="non-virtual"><scope>jetleg_system::JetlegSystem</scope><name>updateSensorData</name></member>
      <member refid="classjetleg__system_1_1JetlegSystem_1a806fe995c7fd3b5e3b9bdcb1c223bd6a" prot="public" virt="non-virtual"><scope>jetleg_system::JetlegSystem</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
